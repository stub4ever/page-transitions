// --------------------------------

// Width

// --------------------------------

.width-xxxxs { width: 0.25rem !important; } // ~4px
.width-xxxs  { width: 0.5rem !important; }  // ~8px
.width-xxs   { width: 0.75rem !important; } // ~12px
.width-xs    { width: 1rem !important; }    // ~16px
.width-sm    { width: 1.5rem !important; }  // ~24px
.width-md    { width: 2rem !important; }    // ~32px
.width-lg    { width: 3rem !important; }    // ~48px
.width-xl    { width: 4rem !important; }    // ~64px
.width-xxl   { width: 6rem !important; }    // ~96px
.width-xxxl  { width: 8rem !important; }    // ~128px
.width-xxxxl { width: 16rem !important; }   // ~256px
.width-10\%  { width: 10% !important; }
.width-20\%  { width: 20% !important; }
.width-25\%  { width: 25% !important; }
.width-30\%  { width: 30% !important; }
.width-33\%  { width: calc(100% / 3) !important; }
.width-40\%  { width: 40% !important; }
.width-50\%  { width: 50% !important; }
.width-60\%  { width: 60% !important; }
.width-66\%  { width: calc(100% / 1.5) !important; }
.width-70\%  { width: 70% !important; }
.width-75\%  { width: 75% !important; }
.width-80\%  { width: 80% !important; }
.width-90\%  { width: 90% !important; }
.width-100\% { width: 100% !important; }
.width-100vw { width: 100vw !important; }


// --------------------------------

// min-width

// --------------------------------

.min-width-0     { min-width: 0 !important; }
.min-width-25\%  { min-width: 25% !important; }
.min-width-33\%  { min-width: calc(100% / 3) !important; }
.min-width-50\%  { min-width: 50% !important; }
.min-width-66\%  { min-width: calc(100% / 1.5) !important; }
.min-width-75\%  { min-width: 75% !important; }
.min-width-100\% { min-width: 100% !important; }

// --------------------------------

// max-width

// --------------------------------

.max-width-100 { max-width: 100px !important; }
.max-width-200 { max-width: 200px !important; }
.max-width-300 { max-width: 300px !important; }
.max-width-400 { max-width: 400px !important; }
.max-width-500 { max-width: 500px !important; }
.max-width-600 { max-width: 600px !important; }
.max-width-700 { max-width: 700px !important; }
.max-width-800 { max-width: 800px !important; }
.max-width-900 { max-width: 900px !important; }

.max-width-xxxxs { max-width: var(--max-width-xxxxs)!important; }
.max-width-xxxs  { max-width: var(--max-width-xxxs)!important; }
.max-width-xxs   { max-width: var(--max-width-xxs)!important; }
.max-width-xs    { max-width: var(--max-width-xs)!important; }
.max-width-sm    { max-width: var(--max-width-sm)!important; }
.max-width-md    { max-width: var(--max-width-md)!important; }
.max-width-lg    { max-width: var(--max-width-lg)!important; }
.max-width-xl    { max-width: var(--max-width-xl)!important; }
.max-width-xxl   { max-width: var(--max-width-xxl)!important; }
.max-width-xxxl  { max-width: var(--max-width-xxxl)!important; }
.max-width-xxxxl { max-width: var(--max-width-xxxxl)!important; }

// alt approach - max-width is updated at specific breakpoints
.max-width-adaptive-sm,
.max-width-adaptive-md,
.max-width-adaptive,
.max-width-adaptive-lg,
.max-width-adaptive-xl {
  max-width: var(--max-width-xs) !important;
}

@include breakpoint(md) {
  .max-width-adaptive-sm {
    max-width: var(--max-width-sm) !important;
  }

  .max-width-adaptive-md,
  .max-width-adaptive,
  .max-width-adaptive-lg,
  .max-width-adaptive-xl {
    max-width: var(--max-width-md) !important;
  }
}

@include breakpoint(xl) {
  .max-width-adaptive,
  .max-width-adaptive-lg {
    max-width: var(--max-width-lg) !important;
  }

  .max-width-adaptive-xl {
    max-width: var(--max-width-xl) !important;
  }
}

// --------------------------------

// Height

// --------------------------------

.height-xxxxs { height: 0.25rem !important; } // ~4px
.height-xxxs  { height: 0.5rem !important; }  // ~8px
.height-xxs   { height: 0.75rem !important; } // ~12px
.height-xs    { height: 1rem !important; }    // ~16px
.height-sm    { height: 1.5rem !important; }  // ~24px
.height-md    { height: 2rem !important; }    // ~32px
.height-lg    { height: 3rem !important; }    // ~48px
.height-xl    { height: 4rem !important; }    // ~64px
.height-xxl   { height: 6rem !important; }    // ~96px
.height-xxxl  { height: 8rem !important; }    // ~128px
.height-xxxxl { height: 16rem !important; }   // ~256px
.height-10\%  { height: 10% !important; }
.height-20\%  { height: 20% !important; }
.height-25\%  { height: 25% !important; }
.height-30\%  { height: 30% !important; }
.height-33\%  { height: calc(100% / 3) !important; }
.height-40\%  { height: 40% !important; }
.height-50\%  { height: 50% !important; }
.height-60\%  { height: 60% !important; }
.height-66\%  { height: calc(100% / 1.5) !important; }
.height-70\%  { height: 70% !important; }
.height-75\%  { height: 75% !important; }
.height-80\%  { height: 80% !important; }
.height-90\%  { height: 90% !important; }
.height-100\% { height: 100% !important; } 
.height-100vh { height: 100vh !important; } 



/////////////////////////
//
// UTILITIES.Size - Set size for grid system with media breaktpoints
// - xs
// - sm
// - md
// - lg
// - xl
//
// - .width[@breakpoint]-[3/4]
// - .width-push[@breakpoint]-[1/2]
// - .width-pull[@breakpoint]-[2/5]
//
/////////////////////////

// $size-fractions: 1 2 3 4 5 !default;
// $size-offsets: true;

// @mixin sizes($columns, $breakpoint: null) {

//   // Loop through the number of columns for each denominator of our fractions.
//   @each $denominator in $columns {

//     // Begin creating a numerator for our fraction up until we hit the
//     // denominator.
//     @for $numerator from 1 through $denominator {

//       // Build a class in the format `.w3/4[@<breakpoint>]`.
//       .width#{$breakpoint}-#{$numerator}\/#{$denominator} {
//         width: ($numerator / $denominator) * 100% !important;
//         max-width: ($numerator / $denominator) * 100% !important;
//       }

//       @if ($size-offsets == true) {
//         // Build a class in the format `.w-push1/2[@<breakpoint>]`.
//         .width-push#{$breakpoint}-#{$numerator}\/#{$denominator} {
//           margin-left: ($numerator / $denominator) * 100% !important;
//         }

//         .width-pull#{$breakpoint}-#{$numerator}\/#{$denominator} {
//           margin-right: ($numerator / $denominator) * 100% !important;
//         }
//       }
//     }
//   }
// }

// @include sizes($size-fractions);

// // add breapkpoints to width utilities
// @each $size-bp-name, $size-bp-value in $breakpoints {
//   @media only screen and (min-width: $size-bp-value) {
//     @include sizes($size-fractions, \@#{$size-bp-name});
//   }
// }
